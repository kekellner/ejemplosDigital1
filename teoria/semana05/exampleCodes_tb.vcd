$date
	Mon Aug  3 10:24:15 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! y $end
$var wire 4 " Y5 [3:0] $end
$var wire 4 # Y4 [3:0] $end
$var wire 4 $ Y3 [3:0] $end
$var wire 4 % Y2 [3:0] $end
$var wire 4 & Y1 [3:0] $end
$var reg 4 ' A [3:0] $end
$var reg 4 ( B [3:0] $end
$var reg 1 ) a1 $end
$var reg 1 * b1 $end
$var reg 1 + c1 $end
$scope module U1 $end
$var wire 4 , a [3:0] $end
$var wire 4 - b [3:0] $end
$var wire 4 . y1 [3:0] $end
$var wire 4 / y2 [3:0] $end
$var wire 4 0 y3 [3:0] $end
$var wire 4 1 y4 [3:0] $end
$var wire 4 2 y5 [3:0] $end
$upscope $end
$scope module U2 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + c $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 2
b1111 1
b0 0
b0 /
b0 .
b0 -
b0 ,
x+
x*
x)
b0 (
b0 '
b0 &
b0 %
b0 $
b1111 #
b1111 "
x!
$end
#1
b1110 #
b1110 1
b1110 "
b1110 2
b1 &
b1 .
b1 %
b1 /
b1 (
b1 -
b1 '
b1 ,
#2
b1100 #
b1100 1
b1000 "
b1000 2
b11 &
b11 .
b111 %
b111 /
b100 $
b100 0
b11 (
b11 -
b111 '
b111 ,
#30
1!
0+
0*
0)
#31
0!
1+
#32
0+
1*
#33
1+
#34
1!
0+
0*
1)
#35
1+
#36
0!
0+
1*
#37
1+
#50
